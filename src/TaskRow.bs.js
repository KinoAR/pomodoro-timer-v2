// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_format = require("bs-platform/lib/js/caml_format.js");

function rStr(string) {
  return string;
}

function TaskRow(Props) {
  var name = Props.name;
  var description = Props.description;
  var estimate = Props.estimate;
  var actual = Props.actual;
  var match = React.useReducer((function (state, action) {
          var text = action[0];
          switch (text) {
            case "description" : 
                return /* record */[
                        /* name */state[/* name */0],
                        /* description */text,
                        /* pomodoroEstimate */state[/* pomodoroEstimate */2],
                        /* pomodoroActual */state[/* pomodoroActual */3]
                      ];
            case "name" : 
                return /* record */[
                        /* name */text,
                        /* description */state[/* description */1],
                        /* pomodoroEstimate */state[/* pomodoroEstimate */2],
                        /* pomodoroActual */state[/* pomodoroActual */3]
                      ];
            case "pomodoroActual" : 
                return /* record */[
                        /* name */state[/* name */0],
                        /* description */state[/* description */1],
                        /* pomodoroEstimate */state[/* pomodoroEstimate */2],
                        /* pomodoroActual */Caml_format.caml_int_of_string(text)
                      ];
            case "pomodoroEstimate" : 
                return /* record */[
                        /* name */state[/* name */0],
                        /* description */state[/* description */1],
                        /* pomodoroEstimate */Caml_format.caml_int_of_string(text),
                        /* pomodoroActual */state[/* pomodoroActual */3]
                      ];
            default:
              return state;
          }
        }), /* record */[
        /* name */"",
        /* description */"",
        /* pomodoroEstimate */0,
        /* pomodoroActual */0
      ]);
  var dispatch = match[1];
  return React.createElement("div", {
              className: "row"
            }, React.createElement("div", {
                  className: "form-row"
                }, React.createElement("div", {
                      className: "col-4"
                    }, React.createElement("input", {
                          name: "name",
                          placeholder: "Task Name",
                          type: "text",
                          value: name,
                          onChange: (function (param) {
                              return Curry._1(dispatch, /* UpdateOnChange */["name"]);
                            })
                        })), React.createElement("div", {
                      className: "col-4"
                    }, React.createElement("input", {
                          name: "description",
                          placeholder: "Task Description",
                          type: "text",
                          value: description,
                          onChange: (function (param) {
                              return Curry._1(dispatch, /* UpdateOnChange */["description"]);
                            })
                        })), React.createElement("div", {
                      className: "col-1"
                    }, React.createElement("input", {
                          name: "estimate",
                          placeholder: "Pomodoro Estimate",
                          type: "text",
                          value: String(estimate),
                          onChange: (function (param) {
                              return Curry._1(dispatch, /* UpdateOnChange */["description"]);
                            })
                        })), React.createElement("div", {
                      className: "col-1"
                    }, React.createElement("input", {
                          name: "actual",
                          placeholder: "Pomodoro Estimate",
                          type: "text",
                          value: String(actual),
                          onChange: (function (param) {
                              return Curry._1(dispatch, /* UpdateOnChange */["description"]);
                            })
                        })), React.createElement("div", {
                      className: "col-1 text-center"
                    }, React.createElement("button", {
                          className: "btn btn-primary"
                        }, "Save")), React.createElement("div", {
                      className: "col-1 text-center"
                    }, React.createElement("button", {
                          className: "btn btn-danger"
                        }, "Remove"))));
}

var make = TaskRow;

exports.rStr = rStr;
exports.make = make;
/* react Not a pure module */
